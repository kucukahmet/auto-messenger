// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/messages": {
            "post": {
                "description": "Adds a new message to the queue for sending",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Add new message",
                "parameters": [
                    {
                        "description": "Message to add",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.NewMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Message added to queue",
                        "schema": {
                            "$ref": "#/definitions/api.NewMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to add",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/messages/sent": {
            "get": {
                "description": "Returns a paginated list of sent messages",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "List sent messages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of messages to return (default 20, max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PaginatedMessagesResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve messages",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/start-listener": {
            "get": {
                "description": "Starts the automatic message sending loop",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listener"
                ],
                "summary": "Start Listener",
                "responses": {
                    "200": {
                        "description": "started",
                        "schema": {
                            "$ref": "#/definitions/api.SimpleResponse"
                        }
                    },
                    "409": {
                        "description": "already running",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/stop-listener": {
            "get": {
                "description": "Stops the automatic message sending loop",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listener"
                ],
                "summary": "Stop Listener",
                "responses": {
                    "200": {
                        "description": "stopped",
                        "schema": {
                            "$ref": "#/definitions/api.SimpleResponse"
                        }
                    },
                    "409": {
                        "description": "not running",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Returns simple pong response with server and listener status. You can also learn the API version.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HealthResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Error message"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "api.HealthResponse": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "example": "v1"
                },
                "buildVersion": {
                    "type": "string",
                    "example": "1.2.3"
                },
                "httpServer": {
                    "type": "boolean",
                    "example": true
                },
                "listenerIsRunning": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "pong"
                },
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "api.MessageResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "fail_reason": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phone_number": {
                    "type": "string"
                },
                "response_message_id": {
                    "type": "string"
                },
                "retry_count": {
                    "type": "integer"
                },
                "sent_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "api.NewMessageRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Hello, this is a test message."
                },
                "phone_number": {
                    "type": "string",
                    "example": "+905xxxxxxxx"
                }
            }
        },
        "api.NewMessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Successfully added new message"
                },
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "api.PaginatedMessagesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MessageResponse"
                    }
                },
                "limit": {
                    "type": "integer",
                    "example": 20
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "returned_count": {
                    "type": "integer",
                    "example": 20
                },
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "api.SimpleResponse": {
            "type": "object",
            "properties": {
                "isRunning": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Started listener"
                },
                "status": {
                    "type": "string",
                    "example": "ok"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
